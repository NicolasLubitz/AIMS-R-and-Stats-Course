install.packages("bookdown")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
load(file='../data/manipulationDatasets.RData')
data.1 %>% head
View(data.1)
View(data.bio)
View(tikus)
load(file='../data/manipulationDatasets.RData')
data.1 %>% head
load(file='../data/manipulationDatasets.RData')
data.1 %>% head
summary(data.1)
load(file='../data/manipulationDatasets.RData')
data.1 %>% head
summary(data.1)
load(file='../data/manipulationDatasets.RData')
data.1 %>% head
summary(data.1)
str(data.1)
load(file='../data/manipulationDatasets.RData')
data.1 %>% head
summary(data.1)
str(data.1)
glimpse(data.1)
arrange(data.1, LAT)
arrange(data.1, LAT)
data.1 %>% arrange(LAT)
arrange(data.1, LAT)
data.1 %>% arrange(LAT)
arrange(data.1, -LAT) # descending order
arrange(data.1, LAT)
data.1 %>% arrange(LAT)
arrange(data.1, -LAT) # descending order
arrange(data.1, Cond,Temp) # Sort by different things
arrange(data.1, LAT)
data.1 %>% arrange(LAT)
arrange(data.1, -LAT) # descending order
arrange(data.1, Cond,Temp) # Sort by different things, categorial values presented in alphabetical order
data.1 %>% arrange(Cond & Temp) #same but piped
arrange(data.1, Between, Cond)
levels(data.1$Cond)
levels(data.1$Cond) # Show what order these factors are in
data.3 <- data.1
levels(data.3$Cond)
levels(data.1$Cond) # Show what order these factors are in
data.3 <- data.1
levels(data.3$Cond)
data.3$Cond <- factor(data.3$Cond, levels=c('L', 'M', 'H'), labels=c("Low", "Medium", "High"))
head(data.3)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
head(data.1)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
select(data.1, Between, Plot, Cond, Time, Temp)
head(data.1)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
select(data.1, Between, Plot, Cond, Time, Temp)
head(data.1)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
dyplr::select(data.1, Between, Plot, Cond, Time, Temp)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
dyplr::select(data.1, Between, Plot, Cond, Time, Temp)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
dyplr::select(data.1, Between, Plot, Cond, Time, Temp)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
dplyr::select(data.1, Between, Plot, Cond, Time, Temp)
head(data.1)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
dplyr::select(data.1, Between, Plot, Cond, Time, Temp)
head(data.1)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
data.1 %>% dplyr::select(data.1, Between, Plot, Cond, Time, Temp)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
data.1 %>% dplyr::select(data.1, Between, Plot, Cond, Time, Temp)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
dplyr::select(data.1 , Between, Plot, Cond, Time, Temp)
head(data.1)
data.1 %>% select(Between, Plot, Cond, Time, Temp)
dplyr::select(data.1 , Between, Plot, Cond, Time, Temp)
head(data.1)
data.1 %>% select(Between, Plot, Cond, Time, Temp) ##Subset columns
dplyr::select(data.1 , Between, Plot, Cond, Time, Temp)
head(data.1)
select(data.1, -LAT, -LONG)
data.1 %>% select(Between, Plot, Cond, Time, Temp) ##Subset columns
dplyr::select(data.1 , Between, Plot, Cond, Time, Temp)
select(data.1, -LAT, -LONG)
head(data.1)
##helper functions
contains()
head(data.1)
select(data.1, contains('L'))
load(nasa)
head(nasa)
head(select(nasa, lat, long, starts_with("cloud")))
tikus[1:10, c(1:3, 76:77)]
dplyr::select(tikus, rep, time, everything(), -contains('pora'))
dplyr::select(tikus, 'Psammocora contigua')
pull(data.1, Temp)
rename(data.1, Condition=Cond, Temperature=Temp)
filter(data.1, Cond=='H')
filter(data.1, Cond=='H' & Temp<25)
filter(data.1, Temp<20 & LAT>20 | LONG<145)
filter(data.1, Temp<20 & (LAT>20 | LONG<145))
data.3<-filter(data.1, Plot=='P1')
data.3
data.1 %>% filter(Plot="P1") %>% droplevels()
data.1 %>% filter(Plot=="P1") %>% droplevels()
##nonsense but for examples sake
mutate(data.1, LL=LAT+LONG)
mutate(data.1, logTemp=log(Temp))
data.1 %>% mutate(cTemp=Temp-mean(Temp))
data.1 %>% summarize(Mean=mean(Temp), Var=variance(Temp))
data.1 %>% summarize(Mean=mean(Temp), Var=var(Temp))
summarise(data.1, across(c(Temp, Lat), list(Mean=mean, Var=var)))
summarise(data.1, across(c(Temp, LAT), list(Mean=mean, Var=var)))
data.1
summarise(data.1, across(where(is.numeric), mean), across(where(is.factor), length))
data.1, %>% group_by(Between, Plot) %>% summarise(Mean=mean(Temp))
data.1 %>% group_by(Between,Plot) %>% summarise(Mean=mean(Temp))
data.w %>% gather(Time, Count, Time.0:Time.2)
inner_join(data.bio, data.chem)
full_join(data.bio, data.chem)
left_join(data.bio, data.chem)
left_join(data.bio, data.geo, by=c("Plot"))
install.packages("latexpdf")
library(latexpdf)
library(knitr)
select(data.1, matches('^T[a-z]m.'))
library(tidyverse)
library(tidyr)
getwd()
setwd('..')
getwd()
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="data/temporal.data.csv", strip.white = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
getwd()
library(tidyverse)
temporal.data <- read.csv(file="Thesis documents/AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="Thesis documents/AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="Thesis documents/AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="Thesis documents/AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
temporal.data <- read.csv(file="AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
temporal.data <- read.csv(file="AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
mutate(Time=ymd_hms(Time))
library(lubridate)
mutate(Time=ymd_hms(Time))
head(temporal.data)
temporal.data %>% mutate(Time=ymd_hms(Time))
head(temporal.data)
date1 <- '2020-02-29'
date2 <- '2020-05-03'
date1
ymd(date1)
as.numeric(ymd(date1))
Diff=ymd(date2) - ymd(date1)
Diff
(Diff=ymd(date2) - ymd(date1))
period(1, 'month')
ym(date1) + period(1, 'month')
ymd(date1) + period(1, 'month')
duration(1, 'month')
ymd(date1) + duration(1, 'month')
Diff/dweeks(1)
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=Time -min(Time))/dhours(1), Hours = ceiling(Hours + 0.001))
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=Time -min(Time))/dhours(1) %>% Hours = ceiling(Hours + 0.001)
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=Time - min(Time))/dhours(1), Hours = ceiling(Hours + 0.001)
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=(Time - min(Time))/dhours(1), Hours = ceiling(Hours + 0.001)) %>% group_by(Site, Hours) %>% summarize(Mean=mean(Resp))
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=(Time - min(Time))/dhours(1), Hours = ceiling(Hours + 0.001))
head(temporal.sum)
temporal.sum
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=(Time - min(Time))/dhours(1), Hours = ceiling(Hours + 0.001)) %>% group_by(Site, Hours) %>% summarize(Mean=mean(Resp))
temporal.sum
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
head(BOD)
summary(BOD)
ggplot(data=BOD, map=aes(y=demand, x=Time)) + geom_point() + geom_line()
p <- ggplot(data=BOD, map=aes(y=demand, x=Time)) + geom_point() + geom_line()
p
p <- p + scale_x_sqrt(name="Time")
p
p <- p + scale_x_log10(name="Time")
Plog <- p + scale_x_log10(name="Time")
Plog <- p + scale_x_log10(name="Time")
Plog
head(CO2)
ggplot(CO2)+geom_point(aes(x=conc,y=uptake), colour="red")
ggplot(CO2)+geom_point(aes(x=conc,y=uptake, colour="blue"))
ggplot(diamonds) + geom_bar(aes(x = carat))
ggplot(diamonds) + geom_bar(aes(x=cut))
ggplot(diamonds) + geom_bar(aes(x=cut, fill=clarity))
ggplot(diamonds) + geom_bar(aes(x=cut, fill=clarity), position='dodge')
ggplot(diamonds) + geom_boxplot(aes(y = carat))
ggplot(diamonds) + geom_boxplot(aes(x= "carat", y = carat))
ggplot(diamonds) + geom_boxplot(aes(y = carat))
ggplot(diamonds) + geom_boxplot(aes(x= cut, y = carat))
ggplot(CO2) + geom_line(aes(x = conc, y = uptake, group=Plant))
ggplot(CO2) + geom_line(aes(x = conc, y = uptake, colour=Plant))
head(CO2)
ggplot(CO2) + geom_line(aes(x = conc, y = uptake, group=Plant))
ggplot(CO2) + geom_line(aes(x = conc, y = uptake, colour=Plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, group=plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, group=Plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Plant, shape=Plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Plant))
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake), method='lm')
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake), method='lm') +geom_point(aes(x=conc, y=uptake))
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake, group=Plant), method='lm') +geom_point(aes(x=conc, y=uptake))
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake, group=Plant)) +geom_point(aes(x=conc, y=uptake))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + coord_polar
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + coord_polar()
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + coord_flip()
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + scale_x_continuous(name="CO2 conc")
install.packages("mapdata")
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + scale_x_continuous(name=expression(Ambient~CO2[2]~concentration~(mg/1)))
Demo(Plotmaths)
demo(plotmaths)
demo(Plotmaths)
demo(plotmath)
ggplot(CO2, aes(y=uptake, x=conc)) + geom_point() + scale_x_continuous(name = "CO2 conc", expand=c(0,200))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + geom_point() + scale_x_log10(name="CO2 conc")
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + scale_x_log10(name="CO2 conc")
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + scale_x_log10(name="CO2 conc", breaks=as.vector(c(1,2,5,10) %o% 10^(-1:2)))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant) + geom_smooth()
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant + geom_smooth()
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant + geom_smooth())
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_smooth() + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake, colour=Type)) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake, colour=Type)) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant, scales='free_y')
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_line(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_grid(Type~Treatment)
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme_bw()
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme_classic(axis.title.x = element_text(margin = margin(t=2, 'lines')))
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=2, 'lines')))
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=12, unit='pt'))
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=12, unit='pt'))
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=12, unit='pt')))
G1 <- ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=2, 'lines')))
ggsave(filename='G1.png')
ggsave(filename='AIMS R Course - Tutorial/G1.png', G1, width = 7, height = 5, units='cm', dpi=300)
install.packages(c("car", "effects", "emmeans", "ggfortify", "sjPlot"))
knitr::opts_chunk$set(echo = TRUE)
library(car)       #for regression diagnostics
library(broom)     #for tidy output
library(ggfortify) #for model diagnostics
library(sjPlot)    #for outputs
library(knitr)     #for kable
library(effects)   #for partial effects plots
library(emmeans)   #for estimating marginal means
library(tidyverse) #for data wrangling
library(modelr)    #for auxillary modelling functions
fert = read_csv('../data/fertilizer.csv', trim_ws=TRUE)
library(readr)
fertilizer <- read_csv("AIMS R Course - Tutorial/data/fertilizer.csv")
View(fertilizer)
fert = read_csv('../data/fertilizer.csv', trim_ws=TRUE)
fert <- fertilizer
head(fert)
fert
glimpse(fert)
getwd()
fert = read_csv('/Users/nicolas/Desktop/Thesis documents/AIMS R Course - Tutorial/data/fertilizer.csv', trim_ws=TRUE)
fert
y_i \sim{} \mathcal{N}(\mu_i, \sigma^2)\\
\mu_i = \beta_0 + \beta_1 x_i
ggplot(fert) +geom_point(aes(x = fertilizer, y= Yield))
ggplot(fert) +geom_point(aes(x = FERTILIZER, y= YIELD))
ggplot(fert) +geom_point(aes(x = FERTILIZER, y= YIELD)) + geom_smooth()
ggplot(fert, aes(x=FERTILIZER, y=YIELD) + geom_point + geom_smooth()
ggplot(fert, aes(x=FERTILIZER, y=YIELD)) + geom_point() + geom_smooth()
ggplot(fert, aes(x=FERTILIZER, y=YIELD)) + geom_point() + geom_smooth()
ggplot(fert, aes(x=FERTILIZER, y=YIELD)) + geom_point() + geom_smooth(method='lm')
ggplot(fert, aes(y=YIELD)) +geom_boxplot()
ggplot(fert, aes(y=YIELD, x=1)) + geom_violin()
fert.lm <- lm(YIELD~1+FERTILIZER, data=fert)
fert.lm <- lm(YIELD~1+FERTILIZER, data=fert)
fert.lm
attributes(fert.lm)
fert.lm$coefficients
fert.lm$residuals
fert.lm$fitted.values
summary(fert.lm)
autoplot(fert.lm, which = 1:6, ncol = 2, label.size = 3)
influence.measures(lm(formula = YIELD ~ FERTILIZER, data = fert))
plot_grid(plot_model(fert.lm, type ='diag'))
plot(allEffects(fert.lm, residuals=TRUE))
plot_model(fert.lm, type = 'eff', show.data = TRUE)
summary(fert.lm)
confint(fert.lm)
tidy(fert.lm, conf.int = TRUE)
tidy(fert.lm, conf.int = TRUE) %>% kable
newdtat <- data.frame(FERTILIZER=110)
xmat <- model.matrix(~FERTILIZER, data=newdata)
newdata <- data.frame(FERTILIZER=110)
xmat <- model.matrix(~FERTILIZER, data=newdata)
xmat
newdata
coef(fert.lm) %*% t(xmat)
head(fertilizer)
newdata <- data.frame(FERTILIZER=110:120)
xmat <- model.matrix(~FERTILIZER, data=newdata)
coef(fert.lm) %*% t(xmat)
emmeans(fert.lm, ~FERTILIZER, at=newdata)
fert_grid <- fert %>% data_grid(FERTILIZER=seq_range(FERTILIZER, n=100))
fert_grid
fert_grid %>% head
head(fert)
fert_grid <- fert %>% data_grid(FERTILIZER=seq_range(FERTILIZER, n=100))
fert_grid
newdata
fert_grid <- fert %>% data_grid(FERTILIZER=seq_range(FERTILIZER, n=100))
newdata <- emmeans(fert.lm, ~ FERTILIZER, at=fert_grid) %>% as.data.frame
newdata
ggplot(newdata, aes(x= FERTILIZER, y=YIELD)) + geom_point()
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point()
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER))
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER))
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER))
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) + geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER))
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER))
ggplot + geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) + geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER))
ggplot + geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) + geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3)
## no improve graph by expressing uncertainty
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3)
## no improve graph by expressing uncertainty
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3)
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3)
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3) + theme_classic()
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3) +
theme_classic() +
scale_y_continuous(expression(Grass~yield~(g.m^3))) +
scale_x_continuous(expression(Fertilizer~concentration~(g.ml^-1)))
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3) +
theme_classic() +
scale_y_continuous(expression(Grass~yield~(g/m^3))) +
scale_x_continuous(expression(Fertilizer~concentration~(g/ml^-1)))
