temporal.data <- read.csv(file="Thesis documents/AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="Thesis documents/AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
temporal.data <- read.csv(file="AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
temporal.data <- read.csv(file="AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
library(tidyverse)
temporal.data <- read.csv(file="AIMS R Course - Tutorial/data/temporal.data.csv", strip.white = TRUE)
mutate(Time=ymd_hms(Time))
library(lubridate)
mutate(Time=ymd_hms(Time))
head(temporal.data)
temporal.data %>% mutate(Time=ymd_hms(Time))
head(temporal.data)
date1 <- '2020-02-29'
date2 <- '2020-05-03'
date1
ymd(date1)
as.numeric(ymd(date1))
Diff=ymd(date2) - ymd(date1)
Diff
(Diff=ymd(date2) - ymd(date1))
period(1, 'month')
ym(date1) + period(1, 'month')
ymd(date1) + period(1, 'month')
duration(1, 'month')
ymd(date1) + duration(1, 'month')
Diff/dweeks(1)
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=Time -min(Time))/dhours(1), Hours = ceiling(Hours + 0.001))
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=Time -min(Time))/dhours(1) %>% Hours = ceiling(Hours + 0.001)
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=Time - min(Time))/dhours(1), Hours = ceiling(Hours + 0.001)
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=(Time - min(Time))/dhours(1), Hours = ceiling(Hours + 0.001)) %>% group_by(Site, Hours) %>% summarize(Mean=mean(Resp))
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=(Time - min(Time))/dhours(1), Hours = ceiling(Hours + 0.001))
head(temporal.sum)
temporal.sum
temporal.sum <- temporal.data %>% mutate(Time = ymd_hms(Time)) %>% group_by(Site) %>% mutate(Hours=(Time - min(Time))/dhours(1), Hours = ceiling(Hours + 0.001)) %>% group_by(Site, Hours) %>% summarize(Mean=mean(Resp))
temporal.sum
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
head(BOD)
summary(BOD)
ggplot(data=BOD, map=aes(y=demand, x=Time)) + geom_point() + geom_line()
p <- ggplot(data=BOD, map=aes(y=demand, x=Time)) + geom_point() + geom_line()
p
p <- p + scale_x_sqrt(name="Time")
p
p <- p + scale_x_log10(name="Time")
Plog <- p + scale_x_log10(name="Time")
Plog <- p + scale_x_log10(name="Time")
Plog
head(CO2)
ggplot(CO2)+geom_point(aes(x=conc,y=uptake), colour="red")
ggplot(CO2)+geom_point(aes(x=conc,y=uptake, colour="blue"))
ggplot(diamonds) + geom_bar(aes(x = carat))
ggplot(diamonds) + geom_bar(aes(x=cut))
ggplot(diamonds) + geom_bar(aes(x=cut, fill=clarity))
ggplot(diamonds) + geom_bar(aes(x=cut, fill=clarity), position='dodge')
ggplot(diamonds) + geom_boxplot(aes(y = carat))
ggplot(diamonds) + geom_boxplot(aes(x= "carat", y = carat))
ggplot(diamonds) + geom_boxplot(aes(y = carat))
ggplot(diamonds) + geom_boxplot(aes(x= cut, y = carat))
ggplot(CO2) + geom_line(aes(x = conc, y = uptake, group=Plant))
ggplot(CO2) + geom_line(aes(x = conc, y = uptake, colour=Plant))
head(CO2)
ggplot(CO2) + geom_line(aes(x = conc, y = uptake, group=Plant))
ggplot(CO2) + geom_line(aes(x = conc, y = uptake, colour=Plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, group=plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, group=Plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Plant, shape=Plant))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Plant))
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake), method='lm')
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake), method='lm') +geom_point(aes(x=conc, y=uptake))
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake, group=Plant), method='lm') +geom_point(aes(x=conc, y=uptake))
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake, group=Plant)) +geom_point(aes(x=conc, y=uptake))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + coord_polar
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + coord_polar()
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + coord_flip()
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + scale_x_continuous(name="CO2 conc")
install.packages("mapdata")
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + scale_x_continuous(name=expression(Ambient~CO2[2]~concentration~(mg/1)))
Demo(Plotmaths)
demo(plotmaths)
demo(Plotmaths)
demo(plotmath)
ggplot(CO2, aes(y=uptake, x=conc)) + geom_point() + scale_x_continuous(name = "CO2 conc", expand=c(0,200))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + geom_point() + scale_x_log10(name="CO2 conc")
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + scale_x_log10(name="CO2 conc")
ggplot(CO2) + geom_point(aes(x=conc, y=uptake)) + scale_x_log10(name="CO2 conc", breaks=as.vector(c(1,2,5,10) %o% 10^(-1:2)))
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant) + geom_smooth()
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant + geom_smooth()
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant + geom_smooth())
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_smooth() + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake, colour=Type)) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_smooth(aes(x=conc, y=uptake, colour=Type)) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant, scales='free_y')
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_line(aes(x=conc, y=uptake, colour=Type)) + facet_wrap(~Plant)
ggplot(CO2) + geom_point(aes(x=conc, y=uptake, colour=Type)) + facet_grid(Type~Treatment)
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme_bw()
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme_classic(axis.title.x = element_text(margin = margin(t=2, 'lines')))
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=2, 'lines')))
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=12, unit='pt'))
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=12, unit='pt'))
ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=12, unit='pt')))
G1 <- ggplot(CO2, aes(y =  uptake, x = conc)) + geom_smooth() + geom_point() + theme(axis.title.x = element_text(margin = margin(t=2, 'lines')))
ggsave(filename='G1.png')
ggsave(filename='AIMS R Course - Tutorial/G1.png', G1, width = 7, height = 5, units='cm', dpi=300)
install.packages(c("car", "effects", "emmeans", "ggfortify", "sjPlot"))
knitr::opts_chunk$set(echo = TRUE)
library(car)       #for regression diagnostics
library(broom)     #for tidy output
library(ggfortify) #for model diagnostics
library(sjPlot)    #for outputs
library(knitr)     #for kable
library(effects)   #for partial effects plots
library(emmeans)   #for estimating marginal means
library(tidyverse) #for data wrangling
library(modelr)    #for auxillary modelling functions
fert = read_csv('../data/fertilizer.csv', trim_ws=TRUE)
library(readr)
fertilizer <- read_csv("AIMS R Course - Tutorial/data/fertilizer.csv")
View(fertilizer)
fert = read_csv('../data/fertilizer.csv', trim_ws=TRUE)
fert <- fertilizer
head(fert)
fert
glimpse(fert)
getwd()
fert = read_csv('/Users/nicolas/Desktop/Thesis documents/AIMS R Course - Tutorial/data/fertilizer.csv', trim_ws=TRUE)
fert
y_i \sim{} \mathcal{N}(\mu_i, \sigma^2)\\
\mu_i = \beta_0 + \beta_1 x_i
ggplot(fert) +geom_point(aes(x = fertilizer, y= Yield))
ggplot(fert) +geom_point(aes(x = FERTILIZER, y= YIELD))
ggplot(fert) +geom_point(aes(x = FERTILIZER, y= YIELD)) + geom_smooth()
ggplot(fert, aes(x=FERTILIZER, y=YIELD) + geom_point + geom_smooth()
ggplot(fert, aes(x=FERTILIZER, y=YIELD)) + geom_point() + geom_smooth()
ggplot(fert, aes(x=FERTILIZER, y=YIELD)) + geom_point() + geom_smooth()
ggplot(fert, aes(x=FERTILIZER, y=YIELD)) + geom_point() + geom_smooth(method='lm')
ggplot(fert, aes(y=YIELD)) +geom_boxplot()
ggplot(fert, aes(y=YIELD, x=1)) + geom_violin()
fert.lm <- lm(YIELD~1+FERTILIZER, data=fert)
fert.lm <- lm(YIELD~1+FERTILIZER, data=fert)
fert.lm
attributes(fert.lm)
fert.lm$coefficients
fert.lm$residuals
fert.lm$fitted.values
summary(fert.lm)
autoplot(fert.lm, which = 1:6, ncol = 2, label.size = 3)
influence.measures(lm(formula = YIELD ~ FERTILIZER, data = fert))
plot_grid(plot_model(fert.lm, type ='diag'))
plot(allEffects(fert.lm, residuals=TRUE))
plot_model(fert.lm, type = 'eff', show.data = TRUE)
summary(fert.lm)
confint(fert.lm)
tidy(fert.lm, conf.int = TRUE)
tidy(fert.lm, conf.int = TRUE) %>% kable
newdtat <- data.frame(FERTILIZER=110)
xmat <- model.matrix(~FERTILIZER, data=newdata)
newdata <- data.frame(FERTILIZER=110)
xmat <- model.matrix(~FERTILIZER, data=newdata)
xmat
newdata
coef(fert.lm) %*% t(xmat)
head(fertilizer)
newdata <- data.frame(FERTILIZER=110:120)
xmat <- model.matrix(~FERTILIZER, data=newdata)
coef(fert.lm) %*% t(xmat)
emmeans(fert.lm, ~FERTILIZER, at=newdata)
fert_grid <- fert %>% data_grid(FERTILIZER=seq_range(FERTILIZER, n=100))
fert_grid
fert_grid %>% head
head(fert)
fert_grid <- fert %>% data_grid(FERTILIZER=seq_range(FERTILIZER, n=100))
fert_grid
newdata
fert_grid <- fert %>% data_grid(FERTILIZER=seq_range(FERTILIZER, n=100))
newdata <- emmeans(fert.lm, ~ FERTILIZER, at=fert_grid) %>% as.data.frame
newdata
ggplot(newdata, aes(x= FERTILIZER, y=YIELD)) + geom_point()
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point()
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER))
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER))
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER))
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) + geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER))
ggplot(fert, aes(x= FERTILIZER, y=YIELD)) + geom_point() + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER))
ggplot + geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) + geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER))
ggplot + geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) + geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) + geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3)
## no improve graph by expressing uncertainty
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3)
## no improve graph by expressing uncertainty
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3)
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3)
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3) + theme_classic()
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3) +
theme_classic() +
scale_y_continuous(expression(Grass~yield~(g.m^3))) +
scale_x_continuous(expression(Fertilizer~concentration~(g.ml^-1)))
ggplot() +
geom_point(data=fert, aes(x= FERTILIZER, y=YIELD)) +
geom_line(data=newdata, aes(y=emmean, x=FERTILIZER)) +
geom_ribbon(data=newdata, aes(ymin=lower.CL, ymax=upper.CL, x=FERTILIZER), alpha=0.3) +
theme_classic() +
scale_y_continuous(expression(Grass~yield~(g/m^3))) +
scale_x_continuous(expression(Fertilizer~concentration~(g/ml^-1)))
library(car)       #for regression diagnostics
library(broom)     #for tidy output
library(ggfortify) #for model diagnostics
library(sjPlot)    #for outputs
library(knitr)     #for kable
library(effects)   #for partial effects plots
library(emmeans)   #for estimating marginal means
library(tidyverse) #for data wrangling
library(modelr)
library(readr)
polis <- read_csv("data/polis.csv")
View(polis)
polis
glimpse(polis)
getwd()
ggplot(aes(polis, x= RATIO, y=PA)) + geom_point()
ggplot(polis, aes(x= RATIO, y=PA)) + geom_point()
polis.glm <- glm(PA ~ RATIO, family=binomial(link='logit'), data=polis)
polis.glm
autoplot(polis.glm, which = 1:6, label.repel = TRUE)
polis %>% mutate(obs=1:n()) %>% ggplot(aes(y=PA, x=RATIO)) + geom_text(aes(label=obs))
polis.resid <- sum(resid(polis.glm, type = "pearson")^2)
polis.resid
polis.resid <- resid.(polis.glm)^2 %>% sum
polis.resid <- resid(polis.glm)^2 %>% sum
polis.resid
polis.resid <- resid(polis.glm, type="pearson")^2 %>% sum
polis.resid
1-pchisq(polis.resid, polis.glm$df.resid)
1-pchisq(polis.glm$deviance, polis.glm$df.resid)
plot(allEffects(polis.glm, residuals="TRUE"), type='response')
plot_model(polis.glm, type='eff', show.data=TRUE)
summary(polis.glm)
exp(-0.22)
polis.glm %>% tidy(conf.int=TRUE) %>% kable
(ld50 <- -polis.glm$coef[1]/polis.glm$coef[2])
ld=MASS::dose.p(polis.glm, p=c(0.5,0.9))
ld
1-(polis.glm$deviance/polis.glm$null)
polis.grid <- polis %>% data_grid(RATIO=seq_range(RATIO, n=100))
polis.grid
head(polis)
newdata <- emmeans(polis.glm, ~RATIO, at=polis.grid, type='response') %>% as.data.frame()
newdata
ggplot(newdata, aes(y=prob, x=RATIO)) +
geom_ribbon(aes(ymin=asymp.LCL, ymax=asymp.UCL), fill='blue', alpha=0.2) +
geom_line() +
theme_classic
ggplot(newdata, aes(y=prob, x=RATIO)) +
geom_ribbon(aes(ymin=asymp.LCL, ymax=asymp.UCL), fill='blue', alpha=0.2) +
geom_line() +
theme_classic()
library(car)       #for regression diagnostics
library(broom)     #for tidy output
library(ggfortify) #for model diagnostics
library(sjPlot)    #for outputs
library(knitr)     #for kable
library(effects)   #for partial effects plots
library(emmeans)   #for estimating marginal means
library(MASS)      #for glm.nb
library(MuMIn)     #for AICc
library(tidyverse) #for data wrangling
library(modelr)
library(readr)
peakquinn <- read_csv("data/peakquinn.csv")
View(peakquinn)
peake <- peakquinn
peake
ggplot(peake, aes(x= AREA, y = INDIV)) + geom_point() + geom_smooth()
ggplot(peake, aes(x= AREA, y = INDIV)) + geom_point() + geom_smooth() + scale_x_log10() + scale_y_log10()
peake.glm <- glm(INDIV ~ log(AREA), data=peake, fanily=poisson(link='log'))
peake.glm <- glm(INDIV ~ log(AREA), data=peake, family=poisson(link='log'))
peake.glm
autoplot(peake.glm, which=1:6)
1-pchisq(peake.glm$deviance, peake.glm$df.resid)
peake.glm$deviance/peake.glm$df.resid
library(MASS)
library(tidyverse)
peake.glm1 <- glm.nb(INDIV ~ log(AREA), data=peake)
peake.glm1
autoplot(peake.glm1, which=1:6)
1-pchisq(peake.glm1$deviance, peake.glm1$df.residual)
peake.glm1$deviance/peake.glm1$df.residual
AIC(peake.glm, peake.glm1)
library(MuMIn)
AICc(peake.glm, peake.glm1)
plot(allEffects(peake.glm1, residuals=TRUE), type='response')
summary(peake.glm1)
exp(0.82)
log(2.2705)
tidy(peake.gml1, conf.int=TRUE) %>% kable
tidy(peake.glm1, conf.int=TRUE) %>% kable
glance(peake.glm1)
1-(peake.glm1$deviance/peake.glm1$null)
r.squaredLR(peake.glm1)
knitr::opts_chunk$set(echo = TRUE)
peake.grid <- peake %>% data_grid(AREA=seq_range(AREA, n=100))
peake.grid <- peake %>% data_grid(AREA=seq_range(AREA, n=100))
newdata <- emmeans(peake.glm1, ~AREA, at=peake.grid, type='response') %>% as.data.frame()
head(newdata)
ggplot(newdata, aes(y=response, x=AREA)) + geom_ribbon(aes(ymin=asymp.LCL, ymax=asymp.UCL), fill='blue', alpha=0.3) +
geom_line() + theme_classic()
ggplot(newdata, aes(y=response, x=AREA)) + geom_ribbon(aes(ymin=asymp.LCL, ymax=asymp.UCL), fill='blue', alpha=0.3) +
geom_line() + geom_point(data=peake, aes(y=INDIV)) + scale_x_log10() + scale_y_log10() + theme_classic()
library(car)       #for regression diagnostics
library(broom)     #for tidy output
library(ggfortify) #for model diagnostics
library(sjPlot)    #for outputs
library(knitr)     #for kable
library(effects)   #for partial effects plots
library(emmeans)   #for estimating marginal means
library(MASS)      #for glm.nb
library(MuMIn)     #for AICc
library(tidyverse) #for data wrangling
library(modelr)
library(readr)
loyn <- read_csv("data/loyn.csv")
View(loyn)
head(loyn)
scatterplotMatrix(~ABUND+DIST+LDIST+AREA+GRAZE+ALT+YR.ISOL, data=loyn, diagonal = list(method='boxplot'))
scatterplotMatrix(~ABUND+log(DIST)+log(LDIST)+log(AREA)+GRAZE+ALT+YR.ISOL, data=loyn, diagonal = list(method='boxplot'))
loyn <- loyn %>% mutate(fGRAZE=factor(GRAZE))
lyon
loyn
loyn.lm <- lm(ABUND ~ scale(log(DIST)) + scale(log(LDIST)) + scale(log(AREA)) + fGRAZE + scale(ALT) + scale(YR.ISOL), data =loyn)
loyn.lm
autoplot(loyn.lm, which=1:6)
vif(loyn.lm)
plot(allEffects(loyn.lm, residuals=TRUE), type='response')
summary(loyn.lm)
loyn.lm <- update(loyn.lm, na.action=na.fail)
dredge(lion.lm, rank="AICc")
dredge(loyn.lm, rank="AICc")
loyn.lm1 <- update(loyn.lm, .~scale(log(DIST)) + scale(log(LDIST)))
loyn.lm1
loyn.lm2 <- update(loyn.lm, .~scale(log(AREA)) + fGRAZE + scale(YR.ISOL))
loyn.lm3 <- update(loyn.lm, .~scale(log(AREA)) + fGRAZE)
loyn.lm4 <- update(loyn.lm, .~scale(ALT))
lyon.null <- update(loyn.lm, .~1)
loyn.null <- update(loyn.lm, .~1)
AICc(loyn.lm, loyn.lm1, loyn.lm2, loyn.lm3, loyn.lm4, loyn.null)
newdata <- list(fGRAZE=levels(loyn$fGRAZE), AREA=seq_range(loyn$AREA, n=100))
newdata
newdata <- emmeans(loyn.lm3, ~AREA|fGRAZE, at=newdata) %>% as.data.frame()
newdata
tail(newdata)
ggplot(newdata, aes(y=emmean, x=AREA, color=fGRAZE, fill=fGRAZE)) + geom_ribbon(aes(ymin=lower.CL, ymax=upper.CL), color=NA, alpha=0.3) + geom_line() + scale_x_log10(labels=scales::comma)+ scale_y_continuous('Abundance') + theme_classic()
loyn.glm <- glm(ABUND~scale(log(AREA)) + fGRAZE, data=loyn, family=Gamma(link='log'))
loyn.glm <- glm(ABUND~scale(log(AREA)) * fGRAZE, data=loyn, family=Gamma(link='log'))
loyn.glm1 <- glm(ABUND~scale(log(AREA)) + fGRAZE, data=loyn, family=Gamma(link='log'))
AICc(loyn.glm, loyn.glm1)
summary(loyn.glm)
exp(3.2022)
summary(loyn.glm1)
exp(2.95324)
newdata <- list(fGRAZE=levels(loyn$fGRAZE), AREA=seq_range(loyn$AREA, n=100))
newdata <- emmeans(loyn.glm1, ~AREA|fGRAZE, at=newdata, type='response') %>% as.data.frame()
ggplot(newdata, aes(y=response, x=AREA, color=fGRAZE, fill=fGRAZE)) + geom_ribbon(aes(ymin=asymp.LCL, ymax=asymp.LCL), color=NA, alpha=0.3) + geom_line() + scale_x_log10(labels=scales::comma)+ scale_y_continuous('Abundance') + theme_classic()
ggplot(newdata, aes(y=response, x=AREA, color=fGRAZE, fill=fGRAZE)) + geom_ribbon(aes(ymin=asymp.LCL, ymax=asymp.UCL), color=NA, alpha=0.3) + geom_line() + scale_x_log10(labels=scales::comma)+ scale_y_continuous('Abundance') + theme_classic()
library(readr)
day <- read_csv("data/day.csv")
View(day)
library(car)       #for regression diagnostics
library(broom)     #for tidy output
library(ggfortify) #for model diagnostics
library(sjPlot)    #for outputs
library(knitr)     #for kable
library(effects)   #for partial effects plots
library(emmeans)   #for estimating marginal means
library(MASS)      #for glm.nb
library(MuMIn)     #for AICc
library(tidyverse) #for data wrangling
library(modelr)
ggplot(day, aes(y=BARNACLE, x=TREAT)) + geom_boxplot() + geom_point(color='red')
day.glm <- glm(BARNACLE~TREAT, data=day, family='gaussian')
day.glm1 <- glm(BARNACLE~TREAT, data=day, family='poisson')
autplot(day.glm1, which=1:6)
autoplot(day.glm1, which=1:6)
1-pchisq(day.glm1$deviance, day.glm1$df.residual)
day.glm1$deviance/day.glm1$df.residual
plot(allEffects(day.glm))
summary(day.glm)
plot(allEffects(day.glm1))
plot(allEffects(day.glm1))
summary(day.glm1)
exp(3.109)
exp(0.23733)
emmeans(day.glm1, pairwise ~ TREAT, type='response')
cmat<-(cbind('Alg1_Alg2'=c(1,-1,0,0), 'NB_S'=c(0,0,1,-1), 'Alg_Bare'=c(0.5,0.5,-0.5,-0.5)))
cmat
crossprod(cmat)
emmeans(day.glm1, pairwise ~ TREAT, contr=list(TREAT=cmat), type='response')
emmeans(day.glm1, ~ TREAT, contr=list(TREAT=cmat), type='response')
newdata <- emmeans(day.glm1, ~TREAT, type='response') %>% as.data.frame()
newdata
ggplot(newdata, aes(y=rate, x=TREAT)) + geom_pointrange(aes(ymin=asymp.LCL, ymax=asymp.UCL)) + theme_classic()
ggplot(newdata, aes(y=rate, x=TREAT)) + geom_pointrange(aes(ymin=asymp.LCL, ymax=asymp.UCL))  +geom_point() + scale_x_discrete('Treatment', breaks=c('ALG1', 'ALG2', 'NB', 'S'), labels=c('Algae spp 1', 'Algae spp 2', 'Naturally bare', 'Scraped bare')) + theme_classic()
library(readr)
quinn <- read_csv("data/quinn.csv")
View(quinn)
head(quinn)
quinn<- quinn %>% mutate(SEASON = factor(SEASON), DENSITY = factor(DENSITY))
quinn
ggplot(quinn, aes(y=RECRUITS, x=SEASON, fill=DENSITY)) + geom_boxplot()
ggplot(quinn, aes(y=RECRUITS, x=SEASON, fill=DENSITY)) + geom_boxplot() + scale_y_log10()
quinn.glm1 <- glm(RECRUITS ~ DENSITY*SEASON, data=quinn, family=poisson(link='log'))
autoplot(quinn.glm1, which=1:6)
autoplot(quinn.glm1, which=1:6)
knitr::opts_chunk$set(echo = TRUE)
## star means each of the terms plus interactions
quinn.glm1 <- glm(RECRUITS ~ DENSITY*SEASON, data=quinn, family=poisson(link='log'))
1-pchisq(quinn.glm1$deviance, df=quinn.glm1$df.residual)
quinn.glm1$deviance/quinn.glm1$df.residual
quinn %>% group_by(SEASON, DENSITY)
quinn %>% group_by(SEASON, DENSITY) %>% summarise(Mean=mean(RECRUITS), Zeros = sum(RECRUITS==0), Total = n())
quinn %>% group_by(SEASON, DENSITY) %>% summarise(Mean=mean(RECRUITS), Zeros = sum(RECRUITS==0), Total = n()) %>% mutate(Prop = Zeros/Total)
head(quinn)
quinn
quinn(tail)
tail(quinn)
rpois(1, lambda=2.67)
x <- rpois(100000000, lambda=2.67)
x
tab.1= table(x==0)
tab.1/sum(tab.1)
library(DHARMa)
install.packages("DHARMa")
library(DHARMa)
simulateResiduals <- simulateResiduals(quinn.glm1, plot=TRUE)
simulateResiduals <- simulateResiduals(quinn.glm, plot=TRUE)
simulateResiduals <- simulateResiduals(quinn.glm1, plot=TRUE)
simulateResiduals1 <- simulateResiduals(quinn.glm1, plot=TRUE)
testDispersion(quinn.glm1)
testZeroInflation(quinn.glm1)
quinn.nb <- glm.nb(RECRUITS ~ DENSITY * SEASON, data=quinn)
quinn.nb
autoplot(quinn.nb, which =1:6)
simulateResiduals <- simulateResiduals(quinn.nb, plot=TRUE)
1-pchisq(quinn.nb$deviance, df=quinn.nb$df.residual)
quinn.nb$deviance/quinn.nb$df.residual
plot(allEffects(quinn.glm1), multiline=TRUE, ci.style='bar')
plot(allEffects(quinn.nb), multiline=TRUE, ci.style='bar')
plot(allEffects(quinn.nb), multiline=TRUE, ci.style='bar', type='link')
summary(quinn.nb)
plot(allEffects(quinn.nb), multiline=TRUE, ci.style='bar')
tidy(allEffects(quinn.nb), conf.int=TRUE, exponentiate=TRUE)
tidy(quinn.nb, conf.int = TRUE, exponentiate = TRUE)
emmeans(quinn.nb, pairwise ~ DENSITY| SEASON, type='response')
newdata <- emmeans(quinn.nb, ~DENSITY|SEASON, type='response') %>% as.data.frame()
head(newdata)
ggplot(newdata, aes(y=response, x=SEASON, fill=DENSITY)) +
geom_pointrange(aes(ymin=asymp.LCL, ymax=asymp.UCL), shape=21, position = position_dodge(width=0.2)) +
theme_classic() + annotate(geom='text', x='Summer', 7=70, label='*', size=7)
ggplot(newdata, aes(y=response, x=SEASON, fill=DENSITY)) +
geom_pointrange(aes(ymin=asymp.LCL, ymax=asymp.UCL), shape=21, position = position_dodge(width=0.2)) +
theme_classic() + annotate(geom ='text', x='Summer', y=70, label='*', size=7)
library(car)       #for regression diagnostics
library(broom)     #for tidy output
library(broom.mixed)
library(ggfortify) #for model diagnostics
library(sjPlot)    #for outputs
library(knitr)     #for kable
library(effects)   #for partial effects plots
library(emmeans)   #for estimating marginal means
library(MASS)      #for glm.nb
library(MuMIn)     #for AICc
library(tidyverse) #for data wrangling
library(nlme)
library(lme4)      #for lmer
library(lmerTest)  #for satterthwaite p-values with lmer
#library(pbkrtest)  #for kenward-roger p-values with lmer
library(readr)
tobacco <- read_csv("data/tobacco.csv")
View(tobacco)
glimpse(tobacco)
mutate(LEAF=factor(LEAF), TREATMENT=factor(TREATMENT))
tobacco <- tobacco %>% mutate(LEAF=factor(LEAF), TREATMENT=factor(TREATMENT))
ggplot(tobacco, aes(y=NUMBER, x=TREATMENT)) + geom_boxplot()
ggplot(tobacco, aes(y=NUMBER, x = as.numeric(LEAF))) + geom_lines(aes(linetype=TREATMENT))
ggplot(tobacco, aes(y=NUMBER, x = as.numeric(LEAF))) + geom_line(aes(linetype=TREATMENT))
install(glmmTMB)
install.packages("glmmTMB")
library(glmmTMB)
tobacco.glmmTMB <- glmmTMB(NUMBER ~ TREATMENT + 1|LEAF), data=tobacco, REML=TRUE)
tobacco.glmmTMB <- glmmTMB(NUMBER ~ TREATMENT + (1|LEAF), data=tobacco, REML=TRUE))
tobacco.glmmTMB <- glmmTMB(NUMBER ~ TREATMENT + (1|LEAF), data=tobacco, REML=TRUE)
library(glmmTMB)
